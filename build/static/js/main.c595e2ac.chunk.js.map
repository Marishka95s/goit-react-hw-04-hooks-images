{"version":3,"sources":["Components/imagesApi.js","Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportObject","fetchImages","a","searchQuery","currentPage","get","then","response","data","hits","Searchbar","state","handleChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","length","props","onChangeQuery","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageGalleryItem","alt","src","url","onClick","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","onFetchImages","modalRoot","querySelector","Modal","handleKeydown","code","onClose","handleOverlayClick","target","addEventListener","removeEventListener","createPortal","App","images","currentPageImages","isLoading","error","largeImage","showModal","modalUrl","modalAlt","toggleModal","options","imagesApi","prevState","catch","message","finally","onClickImageGalleryItem","getAttribute","prevProps","shouldRenderLoadMoreButton","style","color","textAlign","fontSize","map","id","tags","webformatURL","largeImageURL","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c595e2ac.chunk.js","sourcesContent":["  \r\nimport axios from 'axios';\r\nconst KEY = '21847975-d0fb10f6989c918e9c55b7840';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchImages = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchImages };\r\nexport default exportObject;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        searchQuery: ''\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({searchQuery: event.currentTarget.value})       \r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();  \r\n        if (this.state.searchQuery.length !== 0) {\r\n            this.props.onChangeQuery(this.state.searchQuery)     \r\n        }  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\"> Search\r\n                        </span>\r\n                    </button>\r\n\r\n                    <input className=\"SearchForm-input\" type=\"text\" autoComplete=\"off\" autoFocus placeholder=\"Search images and photos\" value={this.state.searchQuery} onChange={this.handleChange}/>\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default ImageGallery;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ alt, src, url, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      onClick={onClick}\r\n      src={src}\r\n      alt={alt}\r\n      className=\"ImageGalleryItem-image\"\r\n      url={url}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n    componentDidMount() {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n    }\r\n    render() {\r\n    return(\r\n        <button type=\"button\" className=\"Button\" onClick={this.props.onFetchImages} >\r\n            Load more\r\n        </button>\r\n    )}\r\n};\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default Button;","import React, { Component} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeydown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeydown)\r\n    }\r\n\r\n    handleKeydown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { src, alt } = this.props;\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>, \r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\n// import axios from 'axios';\r\nimport imagesApi from './Components/imagesApi';\r\nimport Searchbar from './Components/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery';\r\nimport ImageGalleryItem from './Components/ImageGalleryItem'\r\nimport Button from './Components/Button';\r\nimport Modal from './Components/Modal';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    currentPage: 1,\r\n    currentPageImages: [],\r\n    searchQuery: '',\r\n    isLoading: false,\r\n    error: null,\r\n    largeImage: '',\r\n    showModal: false,\r\n    modalUrl: '',\r\n    modalAlt: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }))\r\n  }\r\n\r\n  onChangeQuery = searchQuery => {\r\n    this.setState({ \r\n      searchQuery: searchQuery, \r\n      currentPage: 1, \r\n      images: [], \r\n      error: null, \r\n    })\r\n  }\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, currentPage } = this.state;\r\n    const options = { searchQuery, currentPage };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    imagesApi\r\n    .fetchImages(options)\r\n    .then(images => {\r\n      this.setState( prevState => ({\r\n        images: [...prevState.images, ...images], \r\n        currentPage: prevState.currentPage + 1,\r\n        currentPageImages: [...images], \r\n      }));\r\n      if (images.length === 0) {\r\n          this.setState({\r\n            error: 'Nothing was find by your query. Try again.',});\r\n      }})\r\n    .catch(error => this.setState({ error: error.message }))\r\n    .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  onClickImageGalleryItem = e => {\r\n    this.setState({\r\n      modalUrl: e.currentTarget.getAttribute('url'),\r\n      modalAlt: e.currentTarget.getAttribute('alt'),\r\n    });\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { images, currentPageImages, isLoading, error, showModal, modalAlt, modalUrl } = this.state;\r\n    const shouldRenderLoadMoreButton = !(currentPageImages.length < 12) && !isLoading;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onChangeQuery={this.onChangeQuery} />\r\n        {error && (\r\n          <p style={{ color: 'red', textAlign: 'center', fontSize: '20px' }}>\r\n            This is error: {error}\r\n          </p>\r\n        )}\r\n\r\n        <ImageGallery>\r\n          {images.map(({ id, tags, webformatURL, largeImageURL }) => (\r\n            <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={this.onClickImageGalleryItem} />\r\n          ))}\r\n        </ImageGallery>\r\n        { isLoading && <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> }       \r\n\r\n        { shouldRenderLoadMoreButton && \r\n          <Button onFetchImages={this.fetchImages}/> }\r\n\r\n        {showModal && (\r\n          <Modal src={modalUrl} alt={modalAlt} onClose={this.toggleModal} />\r\n        )}  \r\n      </>      \r\n    )    \r\n  }   \r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}