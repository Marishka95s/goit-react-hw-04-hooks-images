{"version":3,"sources":["Components/imagesApi.js","Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGallery.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportObject","fetchImages","a","searchQuery","currentPage","get","then","response","data","hits","Searchbar","onChangeQuery","useState","setSearchQuery","className","onSubmit","e","preventDefault","length","type","autoComplete","autoFocus","placeholder","value","onChange","event","currentTarget","ImageGallery","children","ImageGalleryItem","alt","src","url","onClick","Button","onFetchImages","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","modalRoot","querySelector","Modal","onClose","addEventListener","handleKeydown","removeEventListener","code","createPortal","target","App","images","setImages","setCurrentPage","currentPageImages","setCurrentPageImages","isLoading","setIsLoading","error","setError","showModal","setShowModal","modalUrl","setModalUrl","modalAlt","setModalAlt","toggleModal","options","imagesApi","prevImages","s","catch","message","finally","onClickImageGalleryItem","getAttribute","style","color","textAlign","fontSize","map","id","tags","webformatURL","largeImageURL","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56b2b18c.chunk.js","sourcesContent":["  \r\nimport axios from 'axios';\r\nconst KEY = '21847975-d0fb10f6989c918e9c55b7840';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchImages = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchImages };\r\nexport default exportObject;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({ onChangeQuery,  }) {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setSearchQuery(event.currentTarget.value);      \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();  \r\n        if (searchQuery.length !== 0) {\r\n            onChangeQuery(searchQuery);     \r\n        }  \r\n    }\r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\"> Search\r\n                    </span>\r\n                </button>\r\n\r\n                <input className=\"SearchForm-input\" type=\"text\" autoComplete=\"off\" autoFocus placeholder=\"Search images and photos\" value={searchQuery} onChange={handleChange}/>\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default ImageGallery;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ alt, src, url, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      onClick={onClick}\r\n      src={src}\r\n      alt={alt}\r\n      className=\"ImageGalleryItem-image\"\r\n      url={url}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onFetchImages }) {\r\n    useEffect(()=>{\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n    }, []);\r\n\r\n    return(\r\n        <button type=\"button\" className=\"Button\" onClick={onFetchImages} >\r\n            Load more\r\n        </button>\r\n    )\r\n};\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};","import React, { useEffect} from 'react';\r\nimport { createPortal } from 'react-dom';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, src, alt }) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeydown);\r\n\r\n        return (window.removeEventListener('keydown', handleKeydown))\r\n    })\r\n\r\n    const handleKeydown = e => {\r\n        if (e.code === 'Escape') { onClose(); }\r\n    }\r\n\r\n    const handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) { onClose(); }\r\n    }\r\n\r\n    return createPortal(\r\n        <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n            <div className=\"Modal\">\r\n                <img src={src} alt={alt} />\r\n            </div>\r\n        </div>, \r\n        modalRoot,\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\nimport imagesApi from './Components/imagesApi';\r\nimport Searchbar from './Components/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery';\r\nimport ImageGalleryItem from './Components/ImageGalleryItem'\r\nimport Button from './Components/Button';\r\nimport Modal from './Components/Modal';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentPageImages, setCurrentPageImages] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [largeImage, setLargeImage] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalUrl, setModalUrl] = useState('');\r\n  const [modalAlt, setModalAlt] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n    fetchImages();\r\n  }, [searchQuery]);\r\n\r\n  const onChangeQuery = searchQuery => {\r\n    setSearchQuery(searchQuery);\r\n    setCurrentPage(1);\r\n    setImages([]);\r\n    setError(null);\r\n  }\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  const fetchImages = () => {\r\n    const options = { searchQuery, currentPage };\r\n    setIsLoading(true)\r\n\r\n    imagesApi\r\n    .fetchImages(options)\r\n    .then(images => {\r\n      setImages(prevImages => [...prevImages, ...images]);\r\n      setCurrentPage(s => s + 1);\r\n      setCurrentPageImages([...images]);\r\n      if (images.length === 0) {\r\n        setError('Nothing was find by your query. Try again.');\r\n      }})\r\n    .catch(error => setError(error.message))\r\n    .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const onClickImageGalleryItem = e => {\r\n    setModalUrl(e.currentTarget.getAttribute('url'));\r\n    setModalAlt(e.currentTarget.getAttribute('alt'));\r\n    toggleModal();\r\n  };\r\n\r\n    const shouldRenderLoadMoreButton = () => {\r\n      const should = !(currentPageImages.length < 12) && !isLoading;\r\n      return should;\r\n    } \r\n\r\n    return (\r\n      <>\r\n        <Searchbar onChangeQuery={onChangeQuery} />\r\n        {error && (\r\n          <p style={{ color: 'red', textAlign: 'center', fontSize: '20px' }}>\r\n            This is error: {error}\r\n          </p>\r\n        )}\r\n\r\n        <ImageGallery>\r\n          {images.map(({ id, tags, webformatURL, largeImageURL }) => (\r\n            <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={onClickImageGalleryItem} />\r\n          ))}\r\n        </ImageGallery>\r\n        { isLoading && <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> }       \r\n\r\n        { shouldRenderLoadMoreButton() && \r\n          <Button onFetchImages={fetchImages}/> }\r\n\r\n        {showModal && (\r\n          <Modal src={modalUrl} alt={modalAlt} onClose={toggleModal} />\r\n        )}  \r\n      </>      \r\n    )    \r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}